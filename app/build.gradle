import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.amedora.slrtcpos"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "Serial_Port"
            //cFlags "-std=c++11 -fexceptions" // Add provisions to allow C++11 functionality
            //stl "gnustl_shared" // Which STL library to use: gnustl or stlport
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
       jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'

        //manifest.srcFile 'src/main/AndroidManifest.xml'
        //java.srcDir 'src'
        //res.srcDir 'res'
        //assets.srcDir 'assets'

        //jniLibs.srcDir 'src/main/libs'
        //jni.srcDirs = ['src/main/jni']      // location of native code files
        //jniLibs.srcDirs = ['jniLibs']
        // This is not necessary unless you have precompiled libraries in your project.
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        /*def ndkDir = android.ndkDirectory
        commandLine 'C:\\android-ndk-r10e\\ndk-build',
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1'*/

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'cmd', 'ndk-build.cmd', '-C', file('src/main/jni').absolutePath
        } else {
            commandLine 'ndk-build', '-C', file('src/main/jni').absolutePath
        }
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        /*def ndkDir = android.ndkDirectory
        commandLine 'C:\\android-ndk-r10e\\ndk-build',
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                'clean'*/
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            commandLine 'cmd', 'ndk-build.cmd', '-C', file('src/main/jni').absolutePath
        } else {
            commandLine 'ndk-build', '-C', file('src/main/jni').absolutePath
        }
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

    repositories {
        mavenCentral()

        maven {
            url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/"
        }

    }

}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.embarkmobile:zxing-android-minimal:2.0.0@aar'
    compile 'com.embarkmobile:zxing-android-integration:2.0.0@aar'
    compile 'de.hdodenhof:circleimageview:1.2.1'
    compile 'com.android.support:recyclerview-v7:22.0+'
    testCompile 'junit:junit:4.12'
}
